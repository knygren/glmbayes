% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.glmb.R
\name{predict.glmb}
\alias{predict.glmb}
\title{Predict Method for Bayesian GLM Fits}
\usage{
\method{predict}{glmb}(
  object,
  newdata = NULL,
  type = "link",
  se.fit = FALSE,
  dispersion = NULL,
  terms = NULL,
  na.action = na.pass,
  olddata = NULL,
  ...
)
}
\arguments{
\item{object}{a fitted object of class inheriting from \code{"glmb"}.}

\item{newdata}{optionally, a data frame in which to look for variables
with which to predict. If omitted, the fitted linear predictors are used.}

\item{type}{the type of prediction required.  The default is on the scale of the linear predictors; 
the alternative \code{"response"} is on the scale of the response variable.  Thus for a default
binomial model the default predictions are of log-odds (probabilities
on logit scale) and \code{type = "response"} gives the predicted
probabilities.  The \code{"terms"} option returns a matrix giving the
fitted values of each term in the model formula on the linear predictor
scale (not implemented).}

\item{se.fit}{logical switch indicating if standard errors are required (not implemented).}

\item{dispersion}{the dispersion of the Bayesian GLM fit to be assumed in 
computing the standard errors. If omitted, that returned by the \code{summary} applied 
to the object is used.}

\item{terms}{with \code{type="terms"} by default all terms are returned.
A character vector specifies which terms are to be returned.}

\item{na.action}{function determining what should be done with missing values in
\code{newdata}. The default is to predict \code{NA}.}

\item{olddata}{a data frame that should contain all the variables used in the 
original model specification. Must currently be provided whenever newdata is 
provided. Both olddata and newdata are subsetted to the model variables extracte
from the object model formula and rbind(olddata,newdata) must be valid after this step. 
A check is also run to verify if the resulting x matrix from olddata is consistent with that 
from the original model object.}

\item{...}{further arguments passed to or from other methods.}
}
\value{
A matrix of predictions where the rows correspond to the draws from the estimated model, and
the columns to the observations in the newdata dataset (or the original data if newdata is missing).
}
\description{
Obtains predictions and optionally estimates standard errors of those
predictions from a fitted Bayesian generalized linear model object.
}
\details{
If \code{newdata} is omitted the predictions are based on the data
used for the fit.  In that case how cases with missing values in the
original fit is determined by the \code{na.action} argument of that
fit.  If \code{na.action = na.omit} omitted cases will not appear in 
the residuals, whereas if \code{na.action = na.exclude} they will 
appear (in predictions and standard errors), with residual value
\code{NA}.  See also \code{\link{napredict}}.
}
\note{
Variables are first looked for in \code{newdata} and then searched for
in the usual way (which will include the environment of the formula 
used in the fit).  A warning will be given if the 
variables found are not of the same length as those in \code{newdata}
if it was supplied.
}
\examples{
data(menarche2)
## ----Analysis Setup-----------------------------------------------------------
## Number of variables in model
Age=menarche2$Age
nvars=2
## Reference Ages for setting of priors and Age_Difference
ref_age1=13  # user can modify this
ref_age2=15  ## user can modify this
## Define variables used later in analysis
Age2=Age-ref_age1
Age_Diff=ref_age2-ref_age1
mu1=as.matrix(c(0,1.098612),ncol=1)
V1<-1*diag(nvars)
V1[1,1]=0.18687882
V1[2,2]=0.10576217
V1[1,2]=-0.03389182
V1[2,1]=-0.03389182
Menarche_Model_Data=data.frame(Age=menarche2$Age,Total=menarche2$Total,
                               Menarche=menarche2$Menarche,Age2)
glmb.out1<-glmb(n=1000,cbind(Menarche, Total-Menarche) ~Age2,family=binomial(logit),
                pfamily=dNormal(mu=mu1,Sigma=V1),data=Menarche_Model_Data)

# Prediction from original model
pred0=predict(glmb.out1,type="link")
colMeans(pred0)

pred1=predict(glmb.out1,type="response")
colMeans(pred1)


## Generate new data
Age_New <- seq(8, 20, 0.25)
Age2_New=Age_New-13
mod_Object=glmb.out1
obs_size=median(menarche2$Total) ## Counts for sim from Binomial
olddata=data.frame(Age=menarche2$Age,
                   Menarche=menarche2$Menarche,Total=menarche2$Total,Age2=Age2)

newdata=data.frame(Age=Age_New,Age2=Age2_New)

# Simulate for newdata

pred_menarche=predict(mod_Object,newdata=newdata,olddata=olddata,type="response")
pred_m=colMeans(pred_menarche)

n=nrow(mod_Object$coefficients)
pred_y=matrix(0,nrow=n,ncol=length(Age_New))
for(i in 1:n){
  pred_y[i,1:length(Age_New)]=rbinom(length(Age_New),size=obs_size,
  prob=pred_menarche[i,1:length(Age_New)
                                                                                      ])
}

# Produce various predictions
pred_y_m=colMeans(pred_y/obs_size)
quant1_m=apply(pred_menarche,2,FUN=quantile,probs=c(0.025))
quant2_m=apply(pred_menarche,2,FUN=quantile,probs=c(0.975))
quant1_m_y=apply(pred_y/obs_size,2,FUN=quantile,probs=c(0.025))
quant2_m_y=apply(pred_y/obs_size,2,FUN=quantile,probs=c(0.975))

#Plot Predictions for newdata
plot(Menarche/Total ~ Age, data=menarche2,
main="Percentage of girls Who have had their first period")
lines(Age_New, pred_m,lty=1)
lines(Age_New, quant1_m,lty=2)
lines(Age_New, quant2_m,lty=2)
lines(Age_New, quant1_m_y,lty=2)
lines(Age_New, quant2_m_y,lty=2)

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Prior.R
\name{Prior_Check}
\alias{Prior_Check}
\title{Checks for Prior-data conflicts}
\usage{
Prior_Check(formula, family, pfamily, level = 0.95, data = NULL)
}
\arguments{
\item{formula}{an object of class \code{"\link[stats]{formula}"} (or one that
    can be coerced to that class): a symbolic description of the
    model to be fitted.  The details of model specification are given
    under \sQuote{Details}.}

\item{family}{a description of the error distribution and link
    function to be used in the model.  For \code{glm} this can be a
    character string naming a family function, a family function or the
    result of a call to a family function.  For \code{glm.fit} only the
    third option is supported.  (See \code{\link[stats]{family}} for details of
    family functions.)}

\item{pfamily}{the prior family to use for the model (including the constants passed to prior).}

\item{level}{the confidence level at which the Prior-data conflict should be checked.}

\item{data}{an optional data frame, list or environment (or object
    coercible by \code{\link{as.data.frame}} to a data frame) containing
    the variables in the model.  If not found in \code{data}, the
    variables are taken from \code{environment(formula)},
    typically the environment from which \code{glm} is called.}
}
\value{
A vector where each item provided the ratio of the absolue value for the difference between the 
prior and maximum likelihood estimate divided by the length of the sum of half of the two intervals 
(where normality is assumed)
}
\description{
Checks if the credible intervals for the prior overlaps with the implied confidence intervals from 
the classical model that comes from a call to the glm function
}
\examples{
## Dobson (1990) Page 93: Randomized Controlled Trial :
counts <- c(18,17,15,20,10,20,25,13,12)
outcome <- gl(3,1,9)
treatment <- gl(3,3)
print(d.AD <- data.frame(treatment, outcome, counts))
## Step 1: Set up Prior
ps=Prior_Setup(counts ~ outcome + treatment)
mu=ps$mu
V=ps$Sigma
# Step2A: Check the Prior
Prior_Check(counts ~ outcome + treatment,family = poisson(),
            pfamily=dNormal(mu=mu,Sigma=V))
# Step2B: Update and Re-Check the Prior
mu[1,1]=log(mean(counts))
Prior_Check(counts ~ outcome + treatment,family = poisson(),
            pfamily=dNormal(mu=mu,Sigma=V))
}
\seealso{


Other Prior Utility Functions:
\code{\link{Prior_Setup}()}
}
\concept{prior}

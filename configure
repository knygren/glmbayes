#!/bin/bash

echo "üîß Generating src/Makevars..."

# Clean old Makevars
rm -f src/Makevars

# Detect the script's own directory
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"

# Echo the resolved path to the screen
echo "DEBUG: configure is running from: $SCRIPT_DIR"



# ----------------------------
# üîç Detect OpenCL header
CL_HEADER=$(find /usr /usr/local /opt -type f -name cl.h 2>/dev/null | grep "/CL/cl.h" | head -n 1)

if [ -n "$CL_HEADER" ]; then
  CL_INC_DIR=$(dirname "$CL_HEADER")
  # Try to locate the OpenCL library using the header path
  CL_LIB_DIR=$(find /usr /usr/local /opt -type f -name libOpenCL.so 2>/dev/null | xargs -n1 dirname | head -n 1)
  echo "‚úÖ OpenCL found: header at $CL_INC_DIR, library at $CL_LIB_DIR"
  USE_OPENCL=1
else
  echo "‚ö†Ô∏è OpenCL not found. Will compile without it."
  USE_OPENCL=0
fi

# ----------------------------
TBB_CFLAGS=$(Rscript -e "RcppParallel::CxxFlags()")

echo "üîß TBB_CFLAGS: $TBB_CFLAGS"

TBB_LIB_DIR="/usr/lib/x86_64-linux-gnu"
TBB_LIBS1="-L$TBB_LIB_DIR -ltbb"
TBB_LIBS2="-Wl,-rpath=$TBB_LIB_DIR"
TBB_LIBS="$TBB_LIBS1 $TBB_LIBS2"

echo "üîß TBB_LIBS1 (compile/link): $TBB_LIBS1"
echo "üîç TBB_LIBS2 (rpath):         $TBB_LIBS2"
echo "üì¶ Combined TBB_LIBS:         $TBB_LIBS"


# ----------------------------
# üóÇÔ∏è Detect source files, exclude OpenCL ones if needed
##ALL_CPP=$(ls src/*.cpp | sed 's|src/||')
ALL_CPP=$(ls src/*.c src/*.cpp 2>/dev/null | sed 's|src/||')

EXCLUDED_CPP="load_kernel_source.cpp load_kernel_library.cpp dpq_test.cpp nmath_test.cpp rmath_test.cpp arithmetic_test.cpp square_test.cpp stirlerr_test.cpp"

echo "DEBUG: ALL_CPP is: $ALL_CPP"
echo "DEBUG: EXCLUDED_CPP is: $EXCLUDED_CPP"

if [ "$USE_OPENCL" = "1" ]; then
  FINAL_CPP="$ALL_CPP"
else
  # Filter out excluded files

echo "$ALL_CPP" | sort > /tmp/all_cpp_sorted.$$
echo "$EXCLUDED_CPP" | sort > /tmp/excluded_cpp_sorted.$$

FINAL_CPP=$(comm -23 /tmp/all_cpp_sorted.$$ /tmp/excluded_cpp_sorted.$$)

echo "DEBUG: FINAL_CPP is: $FINAL_CPP"

# Clean up
rm -f /tmp/all_cpp_sorted.$$ /tmp/excluded_cpp_sorted.$$

fi

# Convert to .o format

##FINAL_OBJS=$(echo "$FINAL_CPP" | sed 's/\.cpp$/.o/' | paste -sd " " -)
FINAL_OBJS=$(echo "$FINAL_CPP" | sed -E 's/\.(cpp|c)$/.o/' | paste -sd " " -)

echo "DEBUG: FINAL_OBJS resolved to: $FINAL_OBJS"

echo "‚úÖ R include directory detected at $R_INCLUDE_DIR"


# ----------------------------
# üì¶ Detect R include directory
R_INCLUDE_DIR=$(R CMD config --cppflags | sed 's/-I//')
echo "‚úÖ R include directory detected at $R_INCLUDE_DIR"






DEBUG_PATH="inst/debug/Makevars_debug"
mkdir -p "$(dirname "$DEBUG_PATH")"
echo "üîç Attempting to write to: $DEBUG_PATH"

echo "DEBUG: FINAL_OBJS FED TO MAKEVARS_DEBUG: '$FINAL_OBJS'"

# Base Makevars block
cat <<EOF > "$DEBUG_PATH"
CXX_STD = CXX17
PKG_CXXFLAGS = \$(SHLIB_OPENMP_CXXFLAGS) $TBB_CFLAGS -I$R_INCLUDE_DIR
OBJECTS = $FINAL_OBJS
PKG_OBJECTS = \$(OBJECTS)
EOF

# Conditional OpenCL block
if [ "$USE_OPENCL" = "1" ]; then
  cat <<EOF >> "$DEBUG_PATH"
PKG_CXXFLAGS += -DUSE_OPENCL -I$CL_INC_DIR
PKG_LIBS = \$(SHLIB_OPENMP_CXXFLAGS) -L$CL_LIB_DIR -lOpenCL $TBB_LIBS -lstdc++ -lgcc \$(LAPACK_LIBS) \$(BLAS_LIBS) \$(FLIBS)
EOF
else
  cat <<EOF >> "$DEBUG_PATH"
PKG_LIBS = \$(SHLIB_OPENMP_CXXFLAGS) $TBB_LIBS -lstdc++ -lgcc \$(LAPACK_LIBS) \$(BLAS_LIBS) \$(FLIBS)
EOF
fi

echo "üìù Debug Makevars written to: $DEBUG_PATH"
echo "‚úÖ src/Makevars generated with CXX17 support."

echo "üìù Debug Makevars written to $DEBUG_PATH"

echo "‚úÖ src/Makevars generated with CXX17 support."

# Derive OpenCL paths if USE_OPENCL is active
if [ "$USE_OPENCL" = "1" ] && [ -n "$CL_HEADER" ]; then
  CL_BASE=$(dirname "$CL_HEADER")
  OPEN_CL_HOME=$(echo "$CL_BASE" | sed 's:/include/CL$::')

  OPENCL_CPPFLAGS="-DUSE_OPENCL -I$OPEN_CL_HOME/include"
  OPENCL_CXXFLAGS=""
  OPENCL_LIBS="-L$OPEN_CL_HOME/lib -lOpenCL"
else
  OPENCL_CPPFLAGS=""
  OPENCL_CXXFLAGS=""
  OPENCL_LIBS=""
fi

RCPP_PARALLEL_INCLUDE="/usr/include/tbb"
##echo "üìÅ RCPP_PARALLEL_INCLUDE (derived): $RCPP_PARALLEL_INCLUDE"

# Echo derived placeholder values for verification
echo ">> Derived values for Makevars.in:"
echo "OPENCL_CPPFLAGS=$OPENCL_CPPFLAGS"
echo "OPENCL_CXXFLAGS=$OPENCL_CXXFLAGS"
echo "OPENCL_LIBS=$OPENCL_LIBS"
echo "RCPP_PARALLEL_INCLUDE=$RCPP_PARALLEL_INCLUDE"
echo "FINAL_OBJS=$FINAL_OBJS"

SED_EXPR=(
  -e "s|@FINAL_OBJS@|$FINAL_OBJS|g"
  -e "s|@RCPP_PARALLEL_INCLUDE@|$RCPP_PARALLEL_INCLUDE|g"
  -e "s|@OPENCL_CPPFLAGS@|$OPENCL_CPPFLAGS|g"
  -e "s|@OPENCL_CXXFLAGS@|$OPENCL_CXXFLAGS|g"
)

if [ "$USE_OPENCL" = "1" ] && [ -n "$CL_HEADER" ]; then
  SED_EXPR+=(-e "s|@OPENCL_LIBS@|$OPENCL_LIBS|g")
else
  SED_EXPR+=(-e "s|@OPENCL_LIBS@||g")
fi

sed "${SED_EXPR[@]}" src/Makevars.in > src/Makevars

echo "‚úÖ src/Makevars has been dynamically generated:"
echo "---BEGIN Makevars---"
cat src/Makevars
echo "---END Makevars---"
